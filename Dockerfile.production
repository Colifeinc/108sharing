FROM node:12.16.1-alpine as node

RUN mkdir -p /opt
RUN ls -al /usr/local/bin/node

COPY package.json yarn.lock ./

# ENV NODE_ENV=production
RUN yarn install

# =====================================

FROM ruby:2.6.5-alpine as bundles

COPY Gemfile Gemfile.lock ./
RUN gem install bundler:2.1.4
RUN bundle config set path vendor/bundle && bundle binstubs --path=binstubs || bundle config
RUN apk add git
RUN apk add build-base
RUN apk add libxml2-dev libxslt-dev
RUN apk add postgresql-dev
RUN bundle config build.nokogiri --use-system-libraries
RUN bundle install --jobs=4

# =====================================

FROM ruby:2.6.5-alpine

RUN apk add libxml2 libxslt
RUN apk add postgresql-client
RUN apk add tzdata
RUN apk add graphicsmagick
RUN apk add openssl
RUN gem install bundler:2.1.4

ARG SECRET_KEY_BASE

ENV PATH=./binstubs:$PATH \
    RAILS_SERVE_STATIC_FILES=enabled \
    RAILS_LOG_TO_STDOUT=enabled \
    RAILS_ENV=production \
    NODE_ENV=production

COPY --from=node /opt/yarn-* /opt/yarn
COPY --from=node /usr/local/bin/node /usr/local/bin/
RUN ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \
  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg

WORKDIR /app
RUN bundle config set path vendor/bundle && bundle binstubs --path=binstubs || bundle config
COPY --from=node node_modules ./node_modules
COPY --from=bundles vendor/bundle ./vendor/bundle
COPY --from=bundles binstubs ./binstubs
COPY . .
# RUN cp deploy/docker-entrypoint.sh ./

RUN rails assets:precompile

EXPOSE  80

# ENTRYPOINT ["./docker-entrypoint.sh"]
CMD ["rails","s","-b","0.0.0.0","-p","80"]
